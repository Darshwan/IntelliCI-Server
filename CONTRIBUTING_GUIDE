# Contributing to IntelliCI Server

Thank you for your interest in contributing to **IntelliCI Server**!  
Your help makes this project better for everyone. ðŸ’™

This document explains how you can report issues, propose new features, and submit your first pull request.

## Project Overview

**IntelliCI Server** is a backend service designed to make Continuous Integration (CI) smarter â€”  
leveraging intelligent log analysis, auto-build triggers, and developer insights.

Built with:
- **Node.js + Express**
- **TypeScript**
- **MongoDB**
- **Docker-ready architecture**
---
## Getting Started

### Fork the Repository

Click the **"Fork"** button on the top-right of this repo to make your own copy.

Then clone your fork:

```bash
git clone https://github.com/Darshwan/IntelliCI-Server.git
cd IntelliCI-Server
```
### Install Dependencies
```bash
npm install
```
### Environment Setup
Create a .env file in the root directory:
```bash
PORT=
MONGO_URI=
JWT_SECRET=
NODE_ENV=
```
### Run the Development Server
```bash
npm run dev
```
### Coding Guidelines

- Use TypeScript for all source files (.ts).
- Follow the existing code style:
   - 2-space indentation
   - Use semicolons
   - Prefer async/await over callbacks
- Add JSDoc comments for complex functions.
- Commit messages should follow conventional commits:
```bash
feat: add new endpoint for build triggers
fix: resolve token validation issue
docs: update contributing guide
refactor: optimize log parser
```
### Testing
Before pushing your changes, ensure that all tests pass:
```bash
npm test
```
Add new tests for any new features or bug fixes.